# Default values for teamcity.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jetbrains/teamcity-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2020.2.3"

teamcity:
  serverMemOpts: "" # example: "-Xmx1g -Xms1g"
  httpsProxyEnabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  loadBalancerIP:
  annotations: {}

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

dataStorage:
  size: 10Gi
  storageClass: null
  accessMode: ReadWriteOnce
  annotations: {}

## Role Based Access Control
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
rbac:
  create: false
  role:
    ## Rules to create. It follows the role specification
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - list
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - create
          - get
          - watch
          - list
          - delete
      - apiGroups:
          - "apps"
        resources:
          - deployments
        verbs:
          - get
          - list

nodeSelector: {}

tolerations: []

affinity: {}

priorityClassName: ""

# Application liveness probe settings
livenessProbe:
  enabled: true

# Application readiness probe settings
readinessProbe:
  enabled: true
